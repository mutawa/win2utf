#include <iostream>
#include <fstream>

using namespace std;

// todo: this is a stand in look up table.
// fill it with valid utf8 bytes that represnts the lower half table of 
// windows 1256 table
// hint: we only need the lower half since the upper half characters are valid utf-8 characters, too.

static const uint16_t lookup[128] = {
    0xd800U,0xd801U,0xd802U,0xd803U,0xd804U,0xd805U,0xd806U,0xd807U,0xd808U,0xd809U,0xd80aU,0xd80bU,0xd80cU,0xd80dU,0xd80eU,0xd80fU,
    0xd810U,0xd811U,0xd812U,0xd813U,0xd814U,0xd815U,0xd816U,0xd817U,0xd818U,0xd819U,0xd81aU,0xd81bU,0xd81cU,0xd81dU,0xd81eU,0xd81fU,
    0xd820U,0xd821U,0xd822U,0xd823U,0xd824U,0xd825U,0xd826U,0xd827U,0xd828U,0xd829U,0xd82aU,0xd80bU,0xd82cU,0xd82dU,0xd82eU,0xd82fU,
    0xd830U,0xd831U,0xd832U,0xd833U,0xd834U,0xd835U,0xd836U,0xd837U,0xd838U,0xd839U,0xd83aU,0xd80bU,0xd83cU,0xd83dU,0xd83eU,0xd83fU,
    0xd840U,0xd841U,0xd842U,0xd843U,0xd844U,0xd845U,0xd846U,0xd847U,0xd848U,0xd849U,0xd84aU,0xd80bU,0xd84cU,0xd84dU,0xd84eU,0xd84fU,
    0xd850U,0xd851U,0xd852U,0xd853U,0xd854U,0xd855U,0xd856U,0xd857U,0xd858U,0xd859U,0xd85aU,0xd80bU,0xd85cU,0xd85dU,0xd85eU,0xd85fU,
    0xd860U,0xd861U,0xd862U,0xd863U,0xd864U,0xd865U,0xd866U,0xd867U,0xd868U,0xd869U,0xd86aU,0xd80bU,0xd86cU,0xd86dU,0xd86eU,0xd86fU,
    0xd870U,0xd871U,0xd872U,0xd873U,0xd874U,0xd875U,0xd876U,0xd877U,0xd878U,0xd879U,0xd87aU,0xd80bU,0xd87cU,0xd87dU,0xd87eU,0xd87fU
    };

int main(int argc, char **argv) {
    
    unsigned char win1256_byte = 0;
    //unsigned char utf8_index = 0;
    uint16_t      utf8_byte = 0;

    // todo: check if the file exits
    // and that the file can be opened
    // display an error message if not
    FILE *input_file = fopen(argv[1], "rb");
    
    // todo: declare an output file to store converted bytes.

    // loop through all of the bytes in the input file
    while(fread(&win1256_byte, sizeof(unsigned char), 1, input_file)) {
        // print out the byte for debuggin...
        printf("win-1256:  %2x  ", win1256_byte);
        // todo: if the upper nibble is 7 or lower, then there is no need
        // to do anything with the byte.. just write it to the output file
        // as is.

        utf8_byte = lookup[win1256_byte - 0x7f];
        // todo: write the bytes to the output file

        // print out the converted byte(s) for debugging.
        printf("utf-8   :  %2x\n",utf8_byte);
    }
    
    // close the file before exiting
    fclose(input_file);

    
    
    return 0;
}